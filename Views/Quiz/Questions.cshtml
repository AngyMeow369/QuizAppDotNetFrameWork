@model List<QuizAppDotNetFrameWork.Models.Question>

@{
    ViewBag.Title = "Quiz Questions";
}

<div class="container mt-4">
    <div class="card shadow-sm border-0">
        <div class="card-header bg-primary text-white">
            <h4 class="card-title mb-0">
                <i class="bi bi-question-circle me-2"></i>@ViewBag.QuizTitle
            </h4>
        </div>
        <div class="card-body">
            @if (Model != null && Model.Count > 0)
            {
                using (Html.BeginForm("SubmitQuiz", "Quiz", FormMethod.Post, new { id = "quizForm" }))
                {
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="quizId" value="@ViewBag.QuizId" />

                    for (int i = 0; i < Model.Count; i++)
                    {
                        <div class="question-card mb-4 p-4 border rounded">
                            <h5 class="question-text mb-3">
                                <span class="badge bg-primary me-2">@(i + 1)</span>
                                @Model[i].QuestionText
                            </h5>

                            <div class="options-list">
                                @if (Model[i].Options != null && Model[i].Options.Count > 0)
                                {
                                    for (int j = 0; j < Model[i].Options.Count; j++)
                                    {
                                        <div class="form-check mb-2">
                                            <input class="form-check-input" type="radio"
                                                   name="selectedOptions[@Model[i].QuestionId]"
                                                   value="@Model[i].Options[j].OptionId"
                                                   id="option_@Model[i].Options[j].OptionId" />
                                            <label class="form-check-label" for="option_@Model[i].Options[j].OptionId">
                                                @Model[i].Options[j].OptionText
                                            </label>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <p class="text-muted">No options available for this question.</p>
                                }
                            </div>
                        </div>
                    }

                    <div class="d-grid">
                        <button type="submit" class="btn btn-success btn-lg">
                            <i class="bi bi-send-check me-2"></i>Submit Quiz
                        </button>
                    </div>
                }
            }
            else
            {
                <div class="text-center py-5">
                    <i class="bi bi-question-circle fs-1 text-muted d-block mb-3"></i>
                    <h5 class="text-muted">No Questions Available</h5>
                    <p class="text-muted">This quiz doesn't have any questions yet.</p>
                    <a href="@Url.Action("Index")" class="btn btn-primary">
                        <i class="bi bi-arrow-left me-2"></i>Back to Quizzes
                    </a>
                </div>
            }
        </div>
    </div>
</div>

<style>
    .question-card {
        background-color: #f8f9fa;
        transition: background-color 0.2s ease;
    }

        .question-card:hover {
            background-color: #e9ecef;
        }

    .form-check-input:checked {
        background-color: #198754;
        border-color: #198754;
    }
</style>