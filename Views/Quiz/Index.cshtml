@model List<QuizAppDotNetFrameWork.Models.Quiz>
@{
    ViewBag.Title = "Available Quizzes";
    Layout = "~/Views/Shared/_Layout.cshtml";

    // Calculate user statistics
    var quizRepo = new QuizAppDotNetFrameWork.Repositories.QuizRepository();
    var userId = Session["UserId"] != null ? (int)Session["UserId"] : 0;
    var userAttempts = quizRepo.GetUserQuizAttempts(userId);
    var completedQuizzes = userAttempts.Select(a => a.QuizId).Distinct().Count();
    var averageScore = userAttempts.Any() ? userAttempts.Average(a => a.Percentage) : 0;
    var assignedQuizzes = quizRepo.GetAssignedQuizzesByUser(userId);
    var pendingAssignments = assignedQuizzes.Where(a => !a.IsCompleted && !a.IsOverdue).ToList();
    var overdueAssignments = assignedQuizzes.Where(a => a.IsOverdue).ToList();
}

<!-- refresh every 30 s -->
<meta http-equiv="refresh" content="10">

<div class="container mt-4">
    <!-- Welcome Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card bg-gradient bg-dark border-secondary">
                <div class="card-body py-4">
                    <div class="row align-items-center">
                        <div class="col-md-8">
                            <h1 class="card-title h2 mb-2 text-white">
                                <i class="bi bi-journals me-2"></i>Available Quizzes
                            </h1>
                            <p class="card-text mb-0 text-light opacity-90">Welcome, <strong class="text-warning">@ViewBag.Username</strong>. Choose a quiz to start your assessment.</p>
                        </div>
                        <div class="col-md-4 text-md-end">
                            <div class="bg-dark bg-opacity-75 border border-light rounded p-3 d-inline-block">
                                <small class="text-uppercase fw-bold text-white opacity-90">Performance</small>
                                <div class="h4 mb-0 fw-bold @(averageScore >= 70 ? "text-success" : averageScore >= 50 ? "text-warning" : "text-danger")">
                                    @averageScore.ToString("0")%
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Quiz Statistics -->
    <div class="row mb-4">
        <div class="col-md-3 mb-3">
            <div class="card border-light bg-dark text-light shadow">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="card-title text-light opacity-90 mb-1">Available Quizzes</h6>
                            <h3 class="text-primary mb-0 fw-bold">@Model.Count</h3>
                        </div>
                        <i class="bi bi-journals text-primary fs-1 opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="card border-light bg-dark text-light shadow">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="card-title text-light opacity-90 mb-1">Total Questions</h6>
                            <h3 class="text-info mb-0 fw-bold">@(Model.Sum(q => quizRepo.GetQuestionsByQuizId(q.QuizId).Count))</h3>
                        </div>
                        <i class="bi bi-question-circle text-info fs-1 opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="card border-light bg-dark text-light shadow">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="card-title text-light opacity-90 mb-1">Completed</h6>
                            <h3 class="text-warning mb-0 fw-bold">@completedQuizzes</h3>
                            <small class="text-light opacity-75">of @Model.Count</small>
                        </div>
                        <i class="bi bi-check-circle text-warning fs-1 opacity-75"></i>
                    </div>
                    <!-- Progress for completed quizzes -->
                    <div class="progress mt-2" style="height: 8px; background-color: #4a5568;">
                        <div class="progress-bar bg-warning" style="width: @(Model.Count > 0 ? (completedQuizzes * 100 / Model.Count) : 0)%"></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="card border-light bg-dark text-light shadow">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="card-title text-light opacity-90 mb-1">Avg. Score</h6>
                            <h3 class="text-success mb-0 fw-bold">@averageScore.ToString("0")%</h3>
                            <small class="text-light opacity-75">@userAttempts.Count attempts</small>
                        </div>
                        <i class="bi bi-graph-up text-success fs-1 opacity-75"></i>
                    </div>
                    <!-- Performance indicator -->
                    <div class="mt-2">
                        @if (averageScore >= 80)
                        {
                            <span class="badge bg-success fs-6 px-2 py-1">Excellent</span>
                        }
                        else if (averageScore >= 60)
                        {
                            <span class="badge bg-warning fs-6 px-2 py-1">Good</span>
                        }
                        else if (averageScore > 0)
                        {
                            <span class="badge bg-danger fs-6 px-2 py-1">Needs Improvement</span>
                        }
                        else
                        {
                            <span class="badge bg-secondary fs-6 px-2 py-1">No attempts</span>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Assigned Quizzes Quick Access -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card border-warning bg-dark text-light shadow">
                <div class="card-header bg-dark border-warning d-flex justify-content-between align-items-center">
                    <h5 class="card-title mb-0 text-warning fw-bold">
                        <i class="bi bi-list-check me-2"></i>Your Assigned Quizzes
                    </h5>
                    <a href="@Url.Action("AssignedQuizzes", "Quiz")" class="btn btn-warning btn-sm fw-bold">
                        <i class="bi bi-arrow-right me-1"></i>View All
                    </a>
                </div>
                <div class="card-body">
                    @if (assignedQuizzes.Any())
                    {
                        <div class="row">
                            <div class="col-md-4 mb-3">
                                <div class="text-center p-3 border border-primary rounded bg-dark">
                                    <h4 class="text-primary mb-1 fw-bold">@assignedQuizzes.Count</h4>
                                    <small class="text-light opacity-90">Total Assigned</small>
                                </div>
                            </div>
                            <div class="col-md-4 mb-3">
                                <div class="text-center p-3 border border-warning rounded bg-dark">
                                    <h4 class="text-warning mb-1 fw-bold">@pendingAssignments.Count</h4>
                                    <small class="text-light opacity-90">Pending</small>
                                </div>
                            </div>
                            <div class="col-md-4 mb-3">
                                <div class="text-center p-3 border border-danger rounded bg-dark">
                                    <h4 class="text-danger mb-1 fw-bold">@overdueAssignments.Count</h4>
                                    <small class="text-light opacity-90">Overdue</small>
                                </div>
                            </div>
                        </div>

                        <!-- Quick assignment list -->
                        <div class="mt-3">
                            <h6 class="text-light mb-3 fw-bold">Recent Assignments:</h6>
                            <div class="list-group">
                                @foreach (var assignment in assignedQuizzes.Take(10))
                                {
                                    <div class="list-group-item bg-dark border-light text-light mb-2">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <div class="flex-grow-1">
                                                <h6 class="mb-1 text-white fw-bold">@assignment.QuizTitle</h6>
                                                <small class="text-light opacity-90">
                                                    Due: @assignment.DueDate.ToString("MMM dd, yyyy")
                                                    @if (assignment.IsOverdue)
                                                    {
                                                        <span class="badge bg-danger ms-2 fw-bold">OVERDUE</span>
                                                    }
                                                    else if (!assignment.IsCompleted)
                                                    {
                                                        <span class="badge bg-warning ms-2 fw-bold">PENDING</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge bg-success ms-2 fw-bold">COMPLETED</span>
                                                    }
                                                </small>
                                            </div>
                                            @if (!assignment.IsCompleted)
                                            {
                                                <a href="@Url.Action("Questions", "Quiz", new { quizId = assignment.QuizId, assignmentId = assignment.AssignmentId })"
                                                   class="btn btn-success btn-sm fw-bold ms-3">
                                                    Start
                                                </a>
                                            }
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-3">
                            <i class="bi bi-inbox text-light fs-1 mb-2 d-block opacity-75"></i>
                            <p class="text-light opacity-90 mb-3">No quiz assignments at the moment.</p>
                            <a href="@Url.Action("AssignedQuizzes", "Quiz")" class="btn btn-outline-warning btn-sm fw-bold">
                                Check for Assignments
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Quizzes List -->
    <div class="row">
        <div class="col-12">
            <div class="card shadow-sm border-light bg-dark text-light">
                <div class="card-header bg-dark border-light d-flex justify-content-between align-items-center">
                    <h5 class="card-title mb-0 text-white fw-bold">
                        <i class="bi bi-list-task me-2"></i>Your Available Quizzes
                        <span class="badge bg-primary ms-2 fs-6">@Model.Count</span>
                    </h5>
                    <div class="dropdown">
                        <button class="btn btn-outline-light btn-sm dropdown-toggle fw-bold" type="button" data-bs-toggle="dropdown">
                            <i class="bi bi-filter me-1"></i>Sort By
                        </button>
                        <ul class="dropdown-menu dropdown-menu-dark">
                            <li><a class="dropdown-item text-light fw-bold" href="#" onclick="sortQuizzes('newest')">Newest First</a></li>
                            <li><a class="dropdown-item text-light fw-bold" href="#" onclick="sortQuizzes('questions')">Most Questions</a></li>
                            <li><a class="dropdown-item text-light fw-bold" href="#" onclick="sortQuizzes('alphabetical')">Alphabetical</a></li>
                        </ul>
                    </div>
                </div>
                <div class="card-body">
                    @if (Model != null && Model.Count > 0)
                    {
                        <div class="row" id="quizzesContainer">
                            @foreach (var quiz in Model)
                            {
                                var questionCount = quizRepo.GetQuestionsByQuizId(quiz.QuizId).Count;
                                var estimatedTime = questionCount * 1; // 1 minute per question
                                var quizAttempts = userAttempts.Where(a => a.QuizId == quiz.QuizId).ToList();
                                var bestScore = quizAttempts.Any() ? quizAttempts.Max(a => a.Percentage) : 0;
                                var attemptsCount = quizAttempts.Count;
                                var isCompleted = quizAttempts.Any();

                                <div class="col-xl-4 col-lg-6 mb-4" data-quiz-id="@quiz.QuizId" data-questions="@questionCount" data-created="@quiz.CreatedOn.Ticks">
                                    <div class="card h-100 border-light bg-dark text-light quiz-card shadow">
                                        <div class="card-header bg-dark border-light d-flex justify-content-between align-items-center">
                                            <h6 class="mb-0 text-truncate text-white fw-bold">@quiz.Title</h6>
                                            <div class="dropdown">
                                                <button class="btn btn-sm btn-outline-light border-0" type="button" data-bs-toggle="dropdown">
                                                    <i class="bi bi-three-dots"></i>
                                                </button>
                                                <ul class="dropdown-menu dropdown-menu-dark">
                                                    <li>
                                                        <a class="dropdown-item text-light fw-bold" href="#" onclick="showQuizDetails(@quiz.QuizId)">
                                                            <i class="bi bi-info-circle me-2"></i>Quiz Details
                                                        </a>
                                                    </li>
                                                    @if (attemptsCount > 0)
                                                    {
                                                        <li>
                                                            <a class="dropdown-item text-light fw-bold" href="@Url.Action("Results", "Quiz")">
                                                                <i class="bi bi-clock me-2"></i>View History
                                                            </a>
                                                        </li>
                                                    }
                                                </ul>
                                            </div>
                                        </div>
                                        <div class="card-body">
                                            <p class="card-text text-light opacity-90 mb-3" style="min-height: 60px;">
                                                @if (!string.IsNullOrEmpty(quiz.Description))
                                                {
                                                    @quiz.Description
                                                }
                                                else
                                                {
                                                    <em class="opacity-75">No description available</em>
                                                }
                                            </p>

                                            <!-- Quiz Metadata -->
                                            <div class="quiz-meta mb-3">
                                                <div class="row g-2 text-center">
                                                    <div class="col-4">
                                                        <div class="border border-light rounded p-2 bg-dark">
                                                            <small class="text-light opacity-90 d-block fw-bold">Questions</small>
                                                            <strong class="text-white fw-bold">@questionCount</strong>
                                                        </div>
                                                    </div>
                                                    <div class="col-4">
                                                        <div class="border border-light rounded p-2 bg-dark">
                                                            <small class="text-light opacity-90 d-block fw-bold">Time</small>
                                                            <strong class="text-white fw-bold">@estimatedTime min</strong>
                                                        </div>
                                                    </div>
                                                    <div class="col-4">
                                                        <div class="border border-light rounded p-2 bg-dark">
                                                            <small class="text-light opacity-90 d-block fw-bold">Best Score</small>
                                                            <strong class="@(bestScore >= 80 ? "text-success" : bestScore >= 60 ? "text-warning" : "text-danger") fw-bold">
                                                                @(isCompleted ? bestScore.ToString("0") + "%" : "--")
                                                            </strong>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                            <!-- Progress Bar -->
                                            <div class="progress mb-2" style="height: 8px; background-color: #4a5568;">
                                                <div class="progress-bar @(isCompleted ? "bg-success" : "bg-secondary")"
                                                     style="width: @(isCompleted ? "100" : "0")%"></div>
                                            </div>
                                            <div class="d-flex justify-content-between align-items-center">
                                                <small class="text-light opacity-90 fw-bold">
                                                    @if (isCompleted)
                                                    {
                                                        <i class="bi bi-check-circle-fill text-success me-1"></i>
                                                        <span>Completed (@attemptsCount attempt@(attemptsCount > 1 ? "s" : ""))</span>
                                                    }
                                                    else
                                                    {
                                                        <i class="bi bi-circle me-1 opacity-75"></i>
                                                        <span>Not attempted</span>
                                                    }
                                                </small>
                                                @if (isCompleted)
                                                {
                                                    <span class="badge @(bestScore >= 80 ? "bg-success" : bestScore >= 60 ? "bg-warning" : "bg-danger") fw-bold">
                                                        Best: @bestScore.ToString("0")%
                                                    </span>
                                                }
                                            </div>
                                        </div>
                                        <div class="card-footer bg-dark border-light">
                                            <div class="d-grid gap-2">
                                                <a href="@Url.Action("Questions", "Quiz", new { quizId = quiz.QuizId })"
                                                   class="btn @(isCompleted ? "btn-outline-success" : "btn-success") btn-sm fw-bold">
                                                    <i class="bi bi-play-circle me-1"></i>
                                                    @(isCompleted ? "Retry Quiz" : "Start Quiz")
                                                </a>
                                            </div>
                                            <div class="mt-2 text-center">
                                                <small class="text-light opacity-75">
                                                    <i class="bi bi-calendar me-1"></i>Created: @quiz.CreatedOn.ToString("MMM dd, yyyy")
                                                </small>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="bi bi-inbox fs-1 text-light d-block mb-3 opacity-75"></i>
                            <h5 class="text-white fw-bold">No Quizzes Available</h5>
                            <p class="text-light opacity-90">There are no quizzes assigned to you at the moment.</p>
                            <small class="text-light opacity-75">Please check back later or contact your administrator.</small>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Quick Actions -->
    <div class="row mt-4">
        <div class="col-12">
            <div class="card border-light bg-dark text-light">
                <div class="card-body text-center py-3">
                    <div class="row">
                        <div class="col-md-4 mb-2 mb-md-0">
                            <i class="bi bi-clock-history text-primary me-2"></i>
                            <small class="text-light opacity-90 fw-bold">View your quiz history and results</small>
                        </div>
                        <div class="col-md-4 mb-2 mb-md-0">
                            <i class="bi bi-graph-up text-success me-2"></i>
                            <small class="text-light opacity-90 fw-bold">Track your progress and scores</small>
                        </div>
                        <div class="col-md-4">
                            <i class="bi bi-info-circle text-info me-2"></i>
                            <small class="text-light opacity-90 fw-bold">Need help? Contact administrator</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Quiz Details Modal -->
<div class="modal fade" id="quizDetailsModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content bg-dark text-light">
            <div class="modal-header border-light">
                <h5 class="modal-title text-white fw-bold">Quiz Details</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="quizDetailsContent">
                <!-- Content will be loaded dynamically -->
            </div>
        </div>
    </div>
</div>

<style>
    body {
        background-color: #1a1a1a;
        color: #ffffff;
    }

    .bg-gradient {
        background: linear-gradient(135deg, #2d3748 0%, #1a202c 100%) !important;
    }

    .card {
        background-color: #2d3748;
        border-color: #e2e8f0 !important;
    }

    .text-light {
        color: #f7fafc !important;
    }

    .border-light {
        border-color: #e2e8f0 !important;
    }

    .border-secondary {
        border-color: #a0aec0 !important;
    }

    .quiz-card {
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

        .quiz-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(255,255,255,0.1) !important;
            border-color: #63b3ed !important;
        }

    .dropdown-menu-dark {
        background-color: #2d3748;
        border: 1px solid #e2e8f0;
    }

    .dropdown-item {
        color: #f7fafc !important;
        font-weight: 500;
    }

        .dropdown-item:hover {
            background-color: #4a5568;
            color: #ffffff !important;
        }

    .progress {
        background-color: #4a5568;
    }

    .btn-success {
        background-color: #48bb78;
        border-color: #48bb78;
        font-weight: 600;
    }

        .btn-success:hover {
            background-color: #38a169;
            border-color: #38a169;
        }

    .btn-outline-light {
        border-color: #e2e8f0;
        color: #e2e8f0;
        font-weight: 600;
    }

        .btn-outline-light:hover {
            background-color: #e2e8f0;
            color: #2d3748;
        }

    /* Improved text visibility */
    .text-muted {
        color: #cbd5e0 !important;
    }

    .opacity-90 {
        opacity: 0.9 !important;
    }

    .opacity-75 {
        opacity: 0.75 !important;
    }

    .shadow {
        box-shadow: 0 4px 6px rgba(255, 255, 255, 0.1) !important;
    }

    .list-group-item {
        background-color: #2d3748 !important;
        border-color: #e2e8f0 !important;
    }

    /* Progress bars */
    .progress-bar {
        transition: width 0.5s ease;
    }

    .quiz-card {
        position: relative;
    }

        .quiz-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 3px;
            background: linear-gradient(90deg, #48bb78, #4299e1);
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .quiz-card:hover::before {
            opacity: 1;
        }

    /* Responsive adjustments */
    @@media (max-width: 768px) {
        .card-header .dropdown {
            display: none;
        }

        .quiz-meta .row .col-4 {
            margin-bottom: 0.5rem;
        }

        .card-body {
            padding: 1.25rem;
        }
    }

    @@media (max-width: 576px) {
        .container {
            padding-left: 15px;
            padding-right: 15px;
        }

        .card-body {
            padding: 1rem;
        }

        h1, h2, h3, h4, h5, h6 {
            word-wrap: break-word;
        }
    }

    /* Ensure text doesn't get cut off */
    .text-truncate {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .card-text {
        line-height: 1.5;
        word-wrap: break-word;
    }
</style>

<script>
    // JavaScript remains the same as your working version
    document.addEventListener('DOMContentLoaded', function () {
        const quizCards = document.querySelectorAll('.quiz-card');
        quizCards.forEach(card => {
            card.addEventListener('click', function (e) {
                if (!e.target.closest('a') && !e.target.closest('.dropdown')) {
                    this.style.transform = 'scale(0.98)';
                    setTimeout(() => {
                        this.style.transform = '';
                    }, 150);
                }
            });
        });
    });

    function sortQuizzes(sortBy) {
        const container = document.getElementById('quizzesContainer');
        const quizzes = Array.from(container.children);
        quizzes.sort((a, b) => {
            switch (sortBy) {
                case 'newest': return parseInt(b.dataset.created) - parseInt(a.dataset.created);
                case 'questions': return parseInt(b.dataset.questions) - parseInt(a.dataset.questions);
                case 'alphabetical':
                    const titleA = a.querySelector('.card-header h6').textContent.toLowerCase();
                    const titleB = b.querySelector('.card-header h6').textContent.toLowerCase();
                    return titleA.localeCompare(titleB);
                default: return 0;
            }
        });
        container.innerHTML = '';
        quizzes.forEach(quiz => container.appendChild(quiz));
    }

    function showQuizDetails(quizId) {
        const content = `
            <div class="text-center">
                <i class="bi bi-info-circle display-1 text-primary mb-3"></i>
                <h5 class="text-white fw-bold">Quiz Details</h5>
                <p class="text-light opacity-90">Detailed quiz information would be displayed here.</p>
                <p class="small text-light opacity-75">Quiz ID: ${quizId}</p>
            </div>
        `;
        document.getElementById('quizDetailsContent').innerHTML = content;
        new bootstrap.Modal(document.getElementById('quizDetailsModal')).show();
    }
</script>