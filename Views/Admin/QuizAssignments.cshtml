@model List<QuizAppDotNetFrameWork.Models.UserQuizAssignment>
@{
    ViewBag.Title = "Quiz Assignments";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <div class="card bg-dark border-light">
                <div class="card-header bg-dark border-light d-flex justify-content-between align-items-center">
                    <h4 class="card-title mb-0 text-white">
                        <i class="bi bi-people me-2"></i>Assignments for: @ViewBag.QuizTitle
                    </h4>
                    <div>
                        <a href="@Url.Action("ViewAssignments")" class="btn btn-outline-light btn-sm">
                            <i class="bi bi-arrow-left me-1"></i>All Assignments
                        </a>
                        <a href="@Url.Action("AssignQuiz")" class="btn btn-success btn-sm">
                            <i class="bi bi-plus-circle me-1"></i>New Assignment
                        </a>
                    </div>
                </div>
                <div class="card-body bg-dark">
                    @if (Model != null && Model.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-dark table-hover">
                                <thead class="border-light">
                                    <tr>
                                        <th class="border-light text-white">User</th>
                                        <th class="border-light text-white">Assigned On</th>
                                        <th class="border-light text-white">Due Date</th>
                                        <th class="border-light text-white">Status</th>
                                        <th class="border-light text-white">Score</th>
                                        <th class="border-light text-white">Time Taken</th>
                                        <th class="border-light text-white">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var assignment in Model)
                                    {
                                        <tr class="border-light">
                                            <td class="border-light">
                                                <strong class="text-white">@assignment.Username</strong>
                                            </td>
                                            <td class="border-light text-white-80">@assignment.AssignedOn.ToString("MMM dd, yyyy")</td>
                                            <td class="border-light">
                                                <span class="@(assignment.IsOverdue ? "text-danger fw-bold" : "text-white-90")">
                                                    @assignment.DueDate.ToString("MMM dd, yyyy hh:mm tt")
                                                </span>
                                            </td>
                                            <td class="border-light">
                                                @if (assignment.IsCompleted)
                                                {
                                                    <span class="badge bg-success">Completed</span>
                                                }
                                                else if (assignment.IsOverdue)
                                                {
                                                    <span class="badge bg-danger">Overdue</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-warning text-dark">Pending</span>
                                                }
                                            </td>
                                            <td class="border-light">
                                                @if (assignment.IsCompleted && assignment.AttemptId.HasValue)
                                                {
                                                    <span class="fw-bold text-info">View Results</span>
                                                }
                                                else
                                                {
                                                    <span class="text-white-60">--</span>
                                                }
                                            </td>
                                            <td class="border-light">
                                                @if (assignment.IsCompleted)
                                                {
                                                    <span class="text-success">Completed</span>
                                                }
                                                else
                                                {
                                                    <span class="text-white-60">--</span>
                                                }
                                            </td>
                                            <td class="border-light">
                                                @if (assignment.IsCompleted && assignment.AttemptId.HasValue)
                                                {
                                                    var quizRepo = new QuizAppDotNetFrameWork.Repositories.QuizRepository();
                                                    var attempt = quizRepo.GetQuizAttemptById(assignment.AttemptId.Value);

                                                    if (attempt != null)
                                                    {
                                                        <a href="@Url.Action("QuizResults", "Quiz", new {
                                                                    quizId = attempt.QuizId,
                                                                    score = attempt.Score,
                                                                    totalQuestions = attempt.TotalQuestions,
                                                                    percentage = attempt.Percentage,
                                                                    grade = attempt.Grade
                                                                    })"
                                                           class="btn btn-outline-info btn-sm border-info text-info">
                                                            <i class="bi bi-graph-up me-1"></i>Results
                                                        </a>
                                                    }
                                                    else
                                                    {
                                                        <span class="text-white-60">Results unavailable</span>
                                                    }
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <!-- Quiz Summary -->
                        <div class="row mt-4">
                            <div class="col-md-12">
                                <div class="card bg-dark border-light">
                                    <div class="card-body">
                                        <h6 class="card-title text-white">Quiz Summary</h6>
                                        <div class="row text-center">
                                            <div class="col-md-3">
                                                <h4 class="text-white">@Model.Count</h4>
                                                <small class="text-white-70">Total Assigned</small>
                                            </div>
                                            <div class="col-md-3">
                                                <h4 class="text-success">@Model.Count(a => a.IsCompleted)</h4>
                                                <small class="text-white-70">Completed</small>
                                            </div>
                                            <div class="col-md-3">
                                                <h4 class="text-warning">@Model.Count(a => !a.IsCompleted && !a.IsOverdue)</h4>
                                                <small class="text-white-70">Pending</small>
                                            </div>
                                            <div class="col-md-3">
                                                <h4 class="text-danger">@Model.Count(a => a.IsOverdue)</h4>
                                                <small class="text-white-70">Overdue</small>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="bi bi-people display-1 text-white-50"></i>
                            <h4 class="text-white mt-3">No Assignments for This Quiz</h4>
                            <p class="text-white-70">This quiz hasn't been assigned to any users yet.</p>
                            <a href="@Url.Action("AssignQuiz")" class="btn btn-success">
                                <i class="bi bi-plus-circle me-1"></i>Assign This Quiz
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    body {
        background-color: #1a1a1a;
        color: #ffffff;
    }

    /* Custom text color classes for better visibility */
    .text-white-90 {
        color: rgba(255, 255, 255, 0.95) !important;
    }

    .text-white-80 {
        color: rgba(255, 255, 255, 0.85) !important;
    }

    .text-white-70 {
        color: rgba(255, 255, 255, 0.75) !important;
    }

    .text-white-60 {
        color: rgba(255, 255, 255, 0.65) !important;
    }

    .text-white-50 {
        color: rgba(255, 255, 255, 0.55) !important;
    }

    .table-dark {
        --bs-table-bg: transparent;
        --bs-table-border-color: #6b7280;
        --bs-table-hover-bg: rgba(59, 130, 246, 0.08);
    }

    .table-hover tbody tr:hover {
        background-color: rgba(59, 130, 246, 0.08) !important;
        transform: translateY(-1px);
        transition: all 0.2s ease;
    }

    .card {
        border: 1px solid #6b7280;
    }

    .btn-outline-info:hover {
        background-color: #0dcaf0;
        border-color: #0dcaf0;
        color: white !important;
    }

    .badge {
        font-size: 0.75em;
        font-weight: 600;
    }

    @@media (max-width: 768px) {
        .table-responsive {
            font-size: 0.875rem;
        }

        .btn-sm {
            font-size: 0.75rem;
            padding: 0.25rem 0.5rem;
        }

        .display-1 {
            font-size: 3rem;
        }
    }
</style>